---
name: build and release new version document
run-name: ${{ github.actor }} release new document version
on:
  push:
    paths:
      - documents/**

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  build-push-document-container:
    runs-on: homelab
    env:
      CONTAINER: document
      IMAGE: linhng98/mess-around-docs
      KANIKO_TEMPLATE: .github/workflows/templates/kaniko.yaml
    steps:
      - uses: actions/checkout@v3
      - name: set env
        run: |
          export GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-8)
          echo "GITHUB_SHA_SHORT=${GITHUB_SHA_SHORT}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${IMAGE}:${GITHUB_SHA_SHORT}" >> $GITHUB_ENV
      - name: create compress tar
        run: |
          tar -C documents -zcvf context-${{ env.GITHUB_SHA_SHORT }}.tar.gz .
      - name: upload context kaniko
        run: |
          export context_tgz=context-${{ env.GITHUB_SHA_SHORT }}.tar.gz
          aws s3 cp ${context_tgz} s3://mess-around-kaniko/${CONTAINER}/${context_tgz}
          echo "KANIKO_CONTEXT=s3://mess-around-kaniko/${CONTAINER}/${context_tgz}" >> $GITHUB_ENV
      - name: config kaniko
        run: |
          sed -i "s|<DOCKERFILE>|Dockerfile|g" ${KANIKO_TEMPLATE}
          sed -i "s|<CONTEXT>|${{ env.KANIKO_CONTEXT }}|g" ${KANIKO_TEMPLATE}
          sed -i "s|<IMAGE_TAG>|${{ env.IMAGE_TAG }}|g" ${KANIKO_TEMPLATE}
          sed -i "s|<BUILD_ID>|${{ env.GITHUB_SHA_SHORT }}|g" ${KANIKO_TEMPLATE}
      - name: build and push kaniko image
        run: |
          kubectl apply -f ${KANIKO_TEMPLATE} -n github-action
          kubectl wait --timeout 60s --for=condition=Ready pod/kaniko-${{ env.GITHUB_SHA_SHORT }} -n github-action
          kubectl logs --follow kaniko-${{ env.GITHUB_SHA_SHORT }} -n github-action

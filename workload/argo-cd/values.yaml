---
argo-cd:
  global:
    image:
      repository: quay.io/argoproj/argocd
      tag: v2.4.12
  controller:
    name: application-controller
    replicas: 1
    args:
      appResyncPeriod: '60'
    metrics: &metrics
      enabled: true
      serviceMonitor:
        enabled: true

  dex:
    enabled: true
    metrics: *metrics

  redis:
    enabled: true
    metrics: *metrics

  server:
    enabled: true
    metrics: *metrics
    ingress:
      enabled: true
      annotations:
        nginx.ingress.kubernetes.io/backend-protocol: HTTPS
        cert-manager.io/cluster-issuer: letsencrypt-prod
      ingressClassName: nginx
      paths:
        - /
      hosts:
        - &host argocd.homelab.linhng98.com
      tls:
        - secretName: argocd-tls
          hosts:
            - *host
      https: true
    config:
      configManagementPlugins: |
        - name: argocd-vault-plugin
          init:
            command:
              - 'sh'
              - '-c'
              - |
                if test -e Chart.yaml; then
                  helm dependency update
                fi
          generate:
            command:
              - 'sh'
              - '-c'
              - |
                if test -e Chart.yaml; then
                  helm template --include-crds $ARGOCD_APP_NAME --namespace $ARGOCD_APP_NAMESPACE . | argocd-vault-plugin generate -
                elif test -e kustomization.yaml; then
                  kustomize build . | argocd-vault-plugin generate -
                else
                  argocd-vault-plugin generate ./
                fi

  repoServer:
    enabled: true
    metrics: *metrics
    config:
      resource.customizations.health.argoproj.io_Application: |
        hs = {}
        hs.status = "Progressing"
        hs.message = ""
        if obj.status ~= nil then
          if obj.status.health ~= nil then
            hs.status = obj.status.health.status
            if obj.status.health.message ~= nil then
              hs.message = obj.status.health.message
            end
          end
        end
        return hs

    volumes:
      - name: custom-tools
        emptyDir: {}
    initContainers:
      - name: download-tools
        image: alpine:3.8
        command: [sh, -c]

      # Don't forget to update this to whatever the stable release version is
      # Note the lack of the `v` prefix unlike the git tag
        env:
          - name: AVP_VERSION
            value: 1.7.0
        args:
          - >-
            wget -O argocd-vault-plugin
            https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v${AVP_VERSION}/argocd-vault-plugin_${AVP_VERSION}_linux_amd64 &&
            chmod +x argocd-vault-plugin &&
            mv argocd-vault-plugin /custom-tools/
        volumeMounts:
          - mountPath: /custom-tools
            name: custom-tools

    volumeMounts:
      - name: custom-tools
        mountPath: /usr/local/bin/argocd-vault-plugin
        subPath: argocd-vault-plugin
    envFrom:
      - secretRef:
          name: argocd-vault-plugin-credential

  applicationSet:
    enabled: true
    metrics: *metrics

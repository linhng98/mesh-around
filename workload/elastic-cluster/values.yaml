---
elasticsearch:
  clusterName: elasticsearch
  nodeGroup: master
  roles:
    master: 'true'
    ingest: 'true'
    data: 'true'
    remote_cluster_client: 'true'
    ml: 'true'

  protocol: https

  esConfig:
    elasticsearch.yml: |
      xpack.security.enabled: true
      xpack.security.transport.ssl.enabled: true
      xpack.security.transport.ssl.verification_mode: certificate
      xpack.security.transport.ssl.certificate: /usr/share/elasticsearch/config/certs/node.crt
      xpack.security.transport.ssl.certificate_authorities: /usr/share/elasticsearch/config/certs/ca.crt
      xpack.security.transport.ssl.key: /usr/share/elasticsearch/config/certs/node.key
      xpack.security.http.ssl.enabled: true
      xpack.security.http.ssl.certificate: /usr/share/elasticsearch/config/certs/node.crt
      xpack.security.http.ssl.certificate_authorities: /usr/share/elasticsearch/config/certs/ca.crt
      xpack.security.http.ssl.key: /usr/share/elasticsearch/config/certs/node.key

  extraEnvs:
    - name: ELASTIC_PASSWORD
      valueFrom:
        secretKeyRef:
          name: elastic-credentials
          key: password

  secretMounts:
    - name: elastic-certificates
      secretName: elastic-certificates
      path: /usr/share/elasticsearch/config/certs

  replicas: 3

  imageTag: 7.17.3

  esJavaOpts: -Xms2g -Xmx2g

  resources:
    requests:
      cpu: 200m
      memory: 3Gi
    limits:
      cpu: 2
      memory: 6Gi

  volumeClaimTemplate:
    accessModes: [ReadWriteOnce]
    resources:
      requests:
        storage: 5Gi

kibana:
  replicas: 1
  resources:
    requests:
      cpu: 50m
      memory: 1Gi
    limits:
      cpu: 500m
      memory: 2Gi

  elasticsearchHosts: https://elasticsearch-master:9200

  extraEnvs:
    - name: ELASTICSEARCH_USERNAME
      value: elastic
    - name: ELASTICSEARCH_PASSWORD
      valueFrom:
        secretKeyRef:
          name: elastic-credentials
          key: password
    - name: KIBANA_ENCRYPTION_KEY
      valueFrom:
        secretKeyRef:
          name: kibana-credentials
          key: encryptionkey

  kibanaConfig:
    kibana.yml: |
      server.ssl:
        enabled: true
        key: /usr/share/kibana/config/certs/node.key
        certificate: /usr/share/kibana/config/certs/node.crt
      xpack.security.encryptionKey: ${KIBANA_ENCRYPTION_KEY}
      elasticsearch.ssl:
        certificateAuthorities: /usr/share/kibana/config/certs/ca.crt
        verificationMode: certificate

  protocol: https

  secretMounts:
    - name: elastic-certificates
      secretName: elastic-certificates
      path: /usr/share/kibana/config/certs

  ingress:
    enabled: true
    className: nginx
    pathtype: Prefix
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    hosts:
      - host: &host kibana.homelab.linhng98.com
        paths:
          - path: /
    tls:
      - secretName: kibana-tls
        hosts:
          - *host

prometheus-elasticsearch-exporter:
  replicaCount: 1
  secretMounts:
    - name: elastic-certificates
      secretName: elastic-certificates
      path: /ssl
  es:
    uri: https://elasticsearch-master:9200
    sslSkipVerify: true
    ssl:
      enabled: true
      useExistingSecrets: true
      ca:
        path: /ssl/ca.crt
      client:
        enabled: true
        pemPath: /ssl/node.crt
        keyPath: /ssl/node.key
  env:
    ES_USER: elastic
  extraEnvSecrets:
    ES_PASSWORD:
      secret: elastic-credentials
      key: password

  serviceMonitor:
    enabled: true
  prometheusRule:
    enabled: false
